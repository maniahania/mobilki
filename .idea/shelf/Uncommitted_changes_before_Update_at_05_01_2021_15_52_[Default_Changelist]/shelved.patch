Index: app/src/main/java/maniananana/chm/locationPoint/LocationPointRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package maniananana.chm.locationPoint;\r\n\r\nimport android.content.Context;\r\nimport android.util.Log;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\n\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport org.joda.time.DateTime;\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.io.Serializable;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.NavigableMap;\r\nimport java.util.UUID;\r\n\r\nimport lombok.Data;\r\n\r\n@Data\r\npublic class  LocationPointRepository implements Serializable {\r\n    private static final String FILE_NAME = \"/data.txt\";\r\n    private List<LocationPoint> locationPoints = new ArrayList<>();\r\n    private DatabaseReference reference = FirebaseDatabase.getInstance().getReference().child(\"LocationPoints\");\r\n\r\n    public void add(LocationPoint locationPoint) {\r\n        locationPoints.add(locationPoint);\r\n    }\r\n\r\n    public List<String> getPointsIds() {\r\n        List<String> uuids = new ArrayList<>();\r\n        for (LocationPoint it : locationPoints) {\r\n            uuids.add(it.getPointId());\r\n        }\r\n        return uuids;\r\n    }\r\n\r\n    public List<LatLng> getPointsLatLng() {\r\n        List<LatLng> latLngs = new ArrayList<>();\r\n        for (LocationPoint it : locationPoints) {\r\n            latLngs.add(it.getLatLng());\r\n        }\r\n        return latLngs;\r\n    }\r\n\r\n    public void delete(LocationPoint locationPoint) {\r\n        locationPoints.remove(find(locationPoint.getPointId()));\r\n    }\r\n\r\n    public void delete(String uuid) {\r\n        locationPoints.remove(find(uuid));\r\n    }\r\n\r\n    public LocationPoint find(String uuid) {\r\n        for (LocationPoint it : locationPoints) {\r\n            if (it.getPointId() == uuid) {\r\n                return it;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void saveDataToFirebase(final Context context) {\r\n        reference.setValue(locationPoints)\r\n                .addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<Void> task) {\r\n                        if(task.isSuccessful()){\r\n                            Toast.makeText(context, \"List is uploaded successfully\", Toast.LENGTH_LONG).show();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    public void loadDataFromFirebase(final Context context) {\r\n        reference.addListenerForSingleValueEvent(new ValueEventListener() {\r\n\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot.exists()){\r\n                    locationPoints.clear();\r\n                    for (DataSnapshot dss : snapshot.getChildren()) {\r\n                        String pointId = dss.child(\"pointId\").getValue(String.class);\r\n                        String name = dss.child(\"name\").getValue(String.class);\r\n                        Double latitude = dss.child(\"latitude\").getValue(Double.class);\r\n                        Double longitude = dss.child(\"longitude\").getValue(Double.class);\r\n                        DateTime date = dss.child(\"createdate\").getValue(DateTime.class);\r\n                        String creatorID = dss.child(\"creatorID\").getValue(String.class);\r\n                        locationPoints.add(new LocationPoint(pointId,name,latitude,longitude,date,creatorID));\r\n                    };\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/maniananana/chm/locationPoint/LocationPointRepository.java	(revision 894a8c4691f9fb32d1c2ec0caebacc3ffe09d2ac)
+++ app/src/main/java/maniananana/chm/locationPoint/LocationPointRepository.java	(date 1608150865137)
@@ -37,7 +37,6 @@
 
 @Data
 public class  LocationPointRepository implements Serializable {
-    private static final String FILE_NAME = "/data.txt";
     private List<LocationPoint> locationPoints = new ArrayList<>();
     private DatabaseReference reference = FirebaseDatabase.getInstance().getReference().child("LocationPoints");
 
